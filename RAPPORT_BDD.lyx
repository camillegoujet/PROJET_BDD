#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{hyperref}   % pour les liens cliquables de la table des matières
 
\makeatletter
\@addtoreset{section}{part}   % reprendre à partir de 1 les sections des parties suivantes.
\makeatother
 
\renewcommand{\thesection}{\Roman{part}.\arabic{section}}
\setcounter{secnumdepth}{0}
\end_preamble
\use_default_options true
\begin_modules
InStar
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\pdf_quoted_options "linkcolor=black, citecolor=black, urlcolor=blue, filecolor=blue, pdfpagelayout=OneColumn, pdfnewwindow=true, pdfstartview=XYZ, plainpages=false"
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 3cm
\rightmargin 3cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
RAPPORT DE PROJET DE BASE DE DONNÉES
\end_layout

\begin_layout Title
GESTION DES RELATIONS INTERNATIONALES 
\end_layout

\begin_layout Author
CAMILLE GOUJET & EMERIC NODET
\begin_inset Newline newline
\end_inset

À L'ATTENTION DE NATHALIE CHAIGNAUD
\begin_inset Newline newline
\end_inset


\begin_inset Graphics
	filename relations_internationales_continents.jpg.png
	lyxscale 50
	scale 50
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Présentation et analyse du sujet
\end_layout

\begin_layout Subsection
Présentation du sujet
\end_layout

\begin_layout Standard
La géopolitique est devenue avec la mondialisation, fondamentale dans la
 compréhension de nos rapports internationaux.
 C’est pourquoi nous avons décidé de nous y intéresser dans le cadre de
 notre projet BDD avec l’idée de créer un modèle simple et compréhensible
 qui mettrait en évidence les différentes associations et conflits entre
 pays et les raisons qui les y poussent du point de vue d'une organisation
 telle que l'ONU.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Les questions que nous pourrions nous poser sous les suivantes :
\begin_inset Newline newline
\end_inset

- Quels pays composent l’union commerciale du Commonwealth (dont le dénominateur
 commun est l’ancien empire britannique et donc sa langue) ? 
\begin_inset Newline newline
\end_inset

- Quelles sont les raisons des conflits au Moyen-Orient ? 
\begin_inset Newline newline
\end_inset

- Quelles sont les religions majoritaires des pays pour un conflit donné
 ? 
\begin_inset Newline newline
\end_inset

- Trier par ordre croissant les IDH des membres d’une même alliance économique
 (comme les BRICS).
\end_layout

\begin_layout Subsection
Modèle Entités/Associations
\end_layout

\begin_layout Standard
Tout d'abord, il nous faut définir ce que l'on va considérer comme un pays.
 Ici, il est reconnaissable à son nom et à son numéro d'identification.
 Il est également important de connaître son indice de développement humain
 (IDH), son produit intérieur brut (PIB), si il possède l'arme atomique
 ou non..
 Ainsi, on aura une entité Pays composée des éléments : IDPays, Nom, PIB,
 IDH, Arme atomique.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Chacun des pays acteurs de ces relations internationales peut aussi posséder
 une ou plusieurs langues officielles et chacune d'entre elles peut être
 considérée comme la langue officielle de plusieurs pays à la fois ou d'aucun
 pour les langues mortes.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Un pays peut aussi posséder une ou plusieurs confessions, dont une majoritaire
 que l'on considèrera donc unique.
 Cette confession pourra s'avérer être la croyance majoritaire de plusieurs
 pays comme d'aucun.
 On crée alors l'entité Confession composée des attributs suivants : IDConfessio
n, Nom et d'un booléen indiquant si elle est majoritaire dans le pays auquel
 elle est rattachée ou non.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Les pays sont peuplés par des personnes.
 Chacune de ces personnes est citoyenne d'un seul pays mais peut avoir différent
es nationalités.
 Ainsi, on crée l'entité Citoyen composée des élements : IDCitoyen, Nom,
 Prénom, Nationalité.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Dans notre modèle, nous avons créée 3 relations ternaires.
 Celles-ci sont utiles quand on a besoin de connaître une occurrence de
 chaque entité pour avoir une information.
\begin_inset Newline newline
\end_inset

Ici, pour connaître la guerre qui a eu lieu à un endroit donné, à une date
 donnée et engageant les pays donnés, on utilise une association ternaire
 entre PAYS, DATE et LIEU.
 La perte en nombre d'hommes et en dollars est une donnée portée par cette
 association.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

De même, on crée une relation ternaire engageant les entités DIRIGEANT,
 DATE et PAYS pour que l'on puisse connaître à une date donnée et dans un
 pays donné, le nom et le statut du dirigeant au pouvoir à ce moment-là.
 Ainsi, on crée une entité Dirigeant composée des attributs suivants : IDDirigea
nt, Nom, Prénom et statut (roi, empereur, président, etc..)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

De la même manière en créant le relation ternaire engageant les entités
 ALLIANCE, PAYS et DATE, on peut connaître toutes les alliances existentes
 à une date donnée et pour les pays donnés avec son nom ainsi que son type
 (économique ou militaire).
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Enfin, un pays peut être relié à une ou plusieurs armées si l'on considère
 les types de celles-ci (marine, armée de terre, armée de l'air).
 Il peut aussi ne pas avoir d'armée.
 Une armée en revanche appartient à un et un seul pays.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

 Pour finir, nous n'avons aucune entité faible dans notre modèle.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Nous allons donc modéliser ces relations internationales de la façon suivante
 :
\begin_inset Newline newline
\end_inset

 
\begin_inset Newline newline
\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ModeleE_A(1).png
	lyxscale 50
	scale 50
	rotateOrigin center

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Modèle E/A 
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Subsection

\series bold
Justification des cardinalités : 
\end_layout

\begin_layout Standard
Dans cette partie, nous allons tenter d'expliquer les cardinalités que nous
 avons choisi d'inscrire sur notre modèle Entités/Associations afin de les
 rendre plus claires.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\emph on
Langue officielle et Pays :
\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

 - Langue officielle vers Pays : cardinalité de type 
\series bold
[ 0, n ]
\series default
 car une langue peut être la langue officielle d'aucun pays (Latin) mais
 elle peut aussi bien être celle de plusieurs pays (Anglais)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

- Pays vers Langue officielle: cardinalité de type 
\series bold
[ 1,n ]
\series default
 car un pays peut avoir une seule langue officielle (France) mais un autre
 peut tout aussi bien en avoir plusieurs (Suisse).
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\emph on
Armée et Pays :
\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

- Pays vers Armée : cardinalité de type 
\series bold
[ 0, n ]
\series default
 car chaque pays peut avoir plusieurs armées si l'on considère les types
 différents de celles-ci mais il peut aussi ne pas en avoirdu tout.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

- Armée vers Pays : cardinalité de type 
\series bold
[ 1, 1 ]
\series default
 car une armée appartient à un et un seul pays.
 (Les alliances militaires sont répertoriés ailleurs, on décide de ne pas
 les compter comme armée commune à plusieurs pays)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\emph on
Relation ternaire engageant Pays, Date et Lieu :
\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Le principal élément de la modélisation des relations géopolitiques est
 la gestions des différents conflits.
 Elle est ici modélisée par une relation ternaire entre dates, lieu et pays
 par la relation guerre avec l'idée qu'en un lieu, nous pouvons avoir plusieurs
 pays et plusieurs dates de conflits et inversement, un pays pouvant se
 retrouver dans plusieurs lieux à plusieurs dates différentes selon les
 conflits dans lesquels il est ou a été engagé.
 Ainsi, on choisit une cardinalité 
\series bold
[ 0,n ] 
\series default
pour toutes les entités de la relation.
 Cela nous permet en fait de pouvoir retracer tout le parcours belliqueux
 d'un pays en temps et en espace.

\series bold
 
\series default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\emph on
Précision :
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard

\emph on
Nous avons décidé de ne pas associer une religion à un individu mais plutôt
 à son pays par soucis de réalisme puisque la collecte de statistiques ethniques
 est en principe interdite en France, avec quelques exceptions très contrôlées.
 Nous considérons qu'il est tout de même intéressant de conserver la nationalité
 associée au citoyen d'un pays.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
Modèle relationnel
\end_layout

\begin_layout Standard
Pour passer au modèle relationnel, on utilise les règles énoncées en cours.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\emph on
Pour chaque entité, on crée une relation de même nom que l’entité et chaque
 propriété de l’entité, y compris l’identifiant, devient un attribut de
 la relation et l’identifiant constitue la clé.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Pour les associations 
\series bold
1:n
\series default
 entre A et B, on crée les relations RA et RB correspondant aux entités
 A et B, l’identifiant de B devient un attribut de RA.
 Une occurrence de A référence l’occurrence de B qui lui est associée à
 l’aide d’une clé étrangère.
\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Ici, on a donc l'identitfiant de Pays qui deviennent des attributs de Armée
 et Citoyen.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\emph on
Ensuite, pour les associations binaires 
\series bold
n:n
\series default
 entre A et B : on crée les relations RA et RB correspondant aux entités
 A et B, on crée une relation RAB pour l’association, la clé de RA et la
 clé de RB deviennent des attributs de RAB, la clé de cette relation est
 la concaténation des clés de RA et RB et les propriétés de l’association
 deviennent des attributs de RAB.
\begin_inset Newline newline
\end_inset


\emph default

\begin_inset Newline newline
\end_inset

Ainsi pour notre modèle, on crée les relations parler et posséder qui sont
 les associations reliant respectivement Langue et Pays, et Confession et
 Pays.
 Ainsi, les identifiants de Langue et Pays deviennent des attributs de parler
 et les identifiants de Confession et Pays ceux de posséder.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\emph on
En ce qui concerne nos 3 associations ternaires, on peut appliquer la règle
 énoncée pour les associations binaires généralisées, l'idée est simplement
 comme pour les relations binaires n:n de créer une realtion RABC avec les
 clés de chacune des entités
\emph default
 (plus éventuellement des attributs spécifiques à la relation comme “Perte
 en argent” pour guerre.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Ici, on crée donc les tables associations : diriger, former et guerre.Ces
 3 relations seront donc composés des identifiants des 3 entités composants
 la relation, d'un identifiant pour l'entité créée en soi (IDFormer, IDDiriger,
 IDGuerre) et les attributs propres à la relation ternaire en elle-même.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Ce qui donne finalement le modèle relationnel suivant :
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Pays (
\series bold
IDPays
\series default
, Nom, PIB, IDH, Arme atomique)
\begin_inset Newline newline
\end_inset

Langue officielle(
\series bold
IDLangue
\series default
, Nom)
\begin_inset Newline newline
\end_inset

parler(
\series bold
IDPays
\series default
,
\series bold
 IDLangue
\series default
)
\begin_inset Newline newline
\end_inset

Confession (
\series bold
IDConfession
\series default
, Nom)
\begin_inset Newline newline
\end_inset

posséder(
\series bold
IDPays, IDConfession
\series default
, majoritaire (O/N))
\begin_inset Newline newline
\end_inset

Citoyen(
\series bold
IDCitoyen
\series default
, Nom, Prénom, Nationalité, IDPays)
\begin_inset Newline newline
\end_inset

former(
\series bold
IDFormer, 
\series default
IDAlliance, IDPays, IDDates)
\begin_inset Newline newline
\end_inset

Alliance(
\series bold
IDAlliance
\series default
, Nom, Type)
\begin_inset Newline newline
\end_inset

Dates(
\series bold
IDDates
\series default
, Date début, Date fin) 
\begin_inset Newline newline
\end_inset

guerre(
\series bold
IDGuerre
\series default
, Perte en nb d’hommes, Perte en argent
\series bold
, 
\series default
IDDates, IDPays, IDLieu)
\begin_inset Newline newline
\end_inset

Lieu(
\series bold
IDLieu
\series default
, NomLieu) 
\begin_inset Newline newline
\end_inset

Dates(
\series bold
IDDates
\series default
, Date début, Date fin) 
\begin_inset Newline newline
\end_inset

Armée(
\series bold
IDArmée
\series default
, Effectif, Nom, type, IDPays)
\begin_inset Newline newline
\end_inset

diriger(
\series bold
IDDiriger,
\series default
 IDDirigeant, IDPays, IDDates)
\begin_inset Newline newline
\end_inset

Dirigeant(
\series bold
IDDirigeant
\series default
, Nom, Prénom, Statut) 
\begin_inset Newline newline
\end_inset

Dates(
\series bold
IDDates
\series default
, Date début, Date fin) 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Subsection
Dénormalisation possible 
\end_layout

\begin_layout Standard
Dénormaliser le modèle permet de simplifier le schéma relationnel en réduisant
 le nombre d’éléments qui le composent et faciliter l’accès aux données
 en introduisant un certain degré de redondance.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Cela consiste en partie à supprimer les entités qui portent peu d’attributs
 en les déplaçant vers une autre relation.
 
\begin_inset Newline newline
\end_inset

Ici, il nous est inutile de conserver les entités Lieu, Dates pour les associati
ons former, diriger, et guerre.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Donc le modèle relationnel devient :
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Pays (
\series bold
IDPays
\series default
, Nom, PIB, IDH, Arme atomique)
\begin_inset Newline newline
\end_inset

Langue officielle(
\series bold
IDLangue
\series default
, Nom)
\begin_inset Newline newline
\end_inset

parler(
\series bold
IDPays
\series default
,
\series bold
 IDLangue
\series default
)
\begin_inset Newline newline
\end_inset

Confession (
\series bold
IDConfession
\series default
, Nom)
\begin_inset Newline newline
\end_inset

posséder(
\series bold
IDPays,IDConfession
\series default
, majoritaire (O/N))
\begin_inset Newline newline
\end_inset

Citoyen(
\series bold
IDCitoyen
\series default
, Nom, Prénom, Nationalité, 
\emph on
IDPays
\emph default
)
\begin_inset Newline newline
\end_inset

Armée(
\series bold
IDArmée
\series default
, Effectif, Nom, type, 
\emph on
IDPays
\emph default
)
\begin_inset Newline newline
\end_inset

former (
\series bold
IDFormer,
\series default
 
\emph on
IDAlliance, IDPays
\emph default
,
\series bold
 
\series default
\color green
Date début, Date fin
\color inherit
)
\begin_inset Newline newline
\end_inset

Alliance (
\series bold
IDAlliance
\series default
, Nom, Type)
\begin_inset Newline newline
\end_inset


\strikeout on
\color red
Date(
\series bold
IDDate
\series default
, Date début, Date fin) 
\strikeout default
\color inherit

\begin_inset Newline newline
\end_inset

guerre(
\series bold
IDGuerre,
\series default
 
\emph on
IDPays
\emph default
, Perte en nb d’hommes, Perte en argent, 
\color green
NomLieu, Date début, Date fin)
\color inherit

\begin_inset Newline newline
\end_inset


\strikeout on
\color red
Lieu (
\series bold
IDLieu
\series default
, NomLieu)
\strikeout default
\color inherit
 
\begin_inset Newline newline
\end_inset


\strikeout on
\color red
Date(
\series bold
IDDate
\series default
, Date début, Date fin) 
\strikeout default
\color inherit

\begin_inset Newline newline
\end_inset

diriger(
\series bold
IDDiriger,
\series default
 
\emph on
IDDirigeant, IDPays
\emph default
, 
\color green
Date début, Date fin
\color inherit
)
\begin_inset Newline newline
\end_inset

Dirigeant(
\series bold
IDDirigeant
\series default
, Nom, Prénom, Statut) 
\begin_inset Newline newline
\end_inset


\strikeout on
\color red
Date(
\series bold
IDDate
\series default
, Date début, Date fin)
\strikeout default
\color inherit
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Création de la base de données sous mySQL
\end_layout

\begin_layout Subsection
Clés primaires et clés étrangères 
\end_layout

\begin_layout Standard
Dans notre modèle, les clés primaires respectives de chaque entité sont
 les attributs notés en gras.
\begin_inset Newline newline
\end_inset

Les clés étrangères de chaque table sont les notations en italique.
\end_layout

\begin_layout Subsection
Tables à implémenter en mySQL
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
On a donc à présent notre modèle final composé des 12 tables ci-dessous.
 Il nous reste seulement à l'implémenter en machine.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Pays (
\series bold
IDPays
\series default
, Nom, PIB, IDH, Arme atomique)
\begin_inset Newline newline
\end_inset

Langue officielle(
\series bold
IDLangue
\series default
, Nom)
\begin_inset Newline newline
\end_inset

parler(
\series bold
IDPays
\series default
,
\series bold
 IDLangue
\series default
)
\begin_inset Newline newline
\end_inset

Confession (
\series bold
IDConfession
\series default
, Nom)
\begin_inset Newline newline
\end_inset

posséder(
\series bold
IDPays,IDConfession
\series default
, majoritaire (O/N))
\begin_inset Newline newline
\end_inset

Citoyen(
\series bold
IDCitoyen
\series default
, Nom, Prénom, Nationalité, 
\emph on
IDPays
\emph default
)
\begin_inset Newline newline
\end_inset

Armée(
\series bold
IDArmée
\series default
, Effe
\color black
ctif, Nom, type, 
\emph on
IDPays
\emph default
)
\begin_inset Newline newline
\end_inset

former (
\series bold
IDFormer,
\series default
 
\emph on
IDAlliance, IDPays
\emph default
,
\series bold
 
\series default
Date début, Date fin)
\begin_inset Newline newline
\end_inset

Alliance (
\series bold
IDAlliance
\series default
, Nom, Type)
\begin_inset Newline newline
\end_inset

guerre(
\series bold
IDGuerre,
\series default
 
\emph on
IDPays
\emph default
, Perte en nb d’hommes, Perte en argent, NomLieu, Date début, Date fin)
\begin_inset Newline newline
\end_inset

diriger(
\series bold
IDDiriger,
\series default
 
\emph on
IDDirigeant, IDPays
\emph default
, Date début, Date fin)
\begin_inset Newline newline
\end_inset

Dirigeant(
\series bold
IDDirigeant
\series default
, Nom, Prénom, Statut) 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newpage newpage
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Pour les implémenter, on utilise le code ci-dessous :
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

CREATE DATABASE Géopolitique; 
\end_layout

\begin_layout Plain Layout

USE Géopolitique;
\end_layout

\begin_layout Plain Layout

CREATE TABLE Pays(
\end_layout

\begin_layout Plain Layout

                  IDPays INT, 	
\end_layout

\begin_layout Plain Layout

				  Nom VARCHAR(50), 	 	
\end_layout

\begin_layout Plain Layout

                  PIB FLOAT, 	
\end_layout

\begin_layout Plain Layout

                  IDH FLOAT, 	
\end_layout

\begin_layout Plain Layout

                  Arme_Atomique BOOL, 	
\end_layout

\begin_layout Plain Layout

                  PRIMARY KEY(IDPays));
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

CREATE TABLE Langue_Officielle(
\end_layout

\begin_layout Plain Layout

                               IDLangue INT, 	
\end_layout

\begin_layout Plain Layout

                               Nom VARCHAR(50), 	
\end_layout

\begin_layout Plain Layout

                               PRIMARY KEY(IDLangue)); 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

CREATE TABLE parler( 	
\end_layout

\begin_layout Plain Layout

                    IDPays INT, 	
\end_layout

\begin_layout Plain Layout

                    IDLangue INT, 	
\end_layout

\begin_layout Plain Layout

                    PRIMARY KEY(IDLangue, IDPays));
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

CREATE TABLE Confession( 	
\end_layout

\begin_layout Plain Layout

                        IDConfession INT, 	
\end_layout

\begin_layout Plain Layout

                        Nom VARCHAR(50), 	
\end_layout

\begin_layout Plain Layout

                        majoritaire BOOL, 	
\end_layout

\begin_layout Plain Layout

                        PRIMARY KEY(IDConfession));
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

CREATE TABLE posséder( 	
\end_layout

\begin_layout Plain Layout

                     IDPays INT, 	
\end_layout

\begin_layout Plain Layout

                     IDConfession INT, 	
\end_layout

\begin_layout Plain Layout

                     PRIMARY KEY(IDConfession, IDPays)); 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

CREATE TABLE Citoyens( 	
\end_layout

\begin_layout Plain Layout

                     IDCitoyens INT, 	
\end_layout

\begin_layout Plain Layout

                     Nom VARCHAR(50), 	
\end_layout

\begin_layout Plain Layout

                     Prénom VARCHAR(50), 	
\end_layout

\begin_layout Plain Layout

                     Nationalité VARCHAR(50), 	
\end_layout

\begin_layout Plain Layout

                     IDPays INT, 	
\end_layout

\begin_layout Plain Layout

                     PRIMARY KEY(IDCitoyens), 	
\end_layout

\begin_layout Plain Layout

                     FOREIGN KEY(IDPays) REFERENCES Pays(IDPays));
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

 	
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
IMPLÉMENTATION DES TABLES mySQL
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\emph on

\begin_inset Newpage newpage
\end_inset


\begin_inset Float algorithm
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

CREATE TABLE Armée( 	
\end_layout

\begin_layout Plain Layout

                  IDArmée INT, 	
\end_layout

\begin_layout Plain Layout

                  Effectif INT, 	
\end_layout

\begin_layout Plain Layout

                  Nom VARCHAR(50), 	
\end_layout

\begin_layout Plain Layout

                  Type VARCHAR(50), 	
\end_layout

\begin_layout Plain Layout

                  IDPays INT, 	
\end_layout

\begin_layout Plain Layout

				  PRIMARY KEY(IDArmée), 	
\end_layout

\begin_layout Plain Layout

                  FOREIGN KEY(IDPays) REFERENCES Pays(IDPays));
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

CREATE TABLE former( 	
\end_layout

\begin_layout Plain Layout

                   IDFormer INT, 	
\end_layout

\begin_layout Plain Layout

                   IDAlliance INT, 	
\end_layout

\begin_layout Plain Layout

                   IDPays INT, 	
\end_layout

\begin_layout Plain Layout

                   DateDébut DATE, 	
\end_layout

\begin_layout Plain Layout

                   DateFin DATE, 	
\end_layout

\begin_layout Plain Layout

                   PRIMARY KEY(IDFormer), 	
\end_layout

\begin_layout Plain Layout

                   FOREIGN KEY(IDAlliance) REFERENCES Alliance(IDAlliance),
 	             
\end_layout

\begin_layout Plain Layout

				   FOREIGN KEY(IDPays) REFERENCES Pays(IDPays)); 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

CREATE TABLE Alliance( 	
\end_layout

\begin_layout Plain Layout

                     IDAlliance INT, 	
\end_layout

\begin_layout Plain Layout

                     Nom VARCHAR(50), 	
\end_layout

\begin_layout Plain Layout

                     Type VARCHAR(50), 	 
\end_layout

\begin_layout Plain Layout

                     PRIMARY KEY(IDAlliance));
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

CREATE TABLE guerre( 	
\end_layout

\begin_layout Plain Layout

                    IDGuerre INT, 	
\end_layout

\begin_layout Plain Layout

                    IDPays INT, 	
\end_layout

\begin_layout Plain Layout

                    Perte_en_nombres_d_hommes INT, 	
\end_layout

\begin_layout Plain Layout

                    Perte_en_argent INT, 	
\end_layout

\begin_layout Plain Layout

                    NomLieu VARCHAR(50), 	
\end_layout

\begin_layout Plain Layout

                    DateDébut DATE, 	
\end_layout

\begin_layout Plain Layout

                    DateFin DATE, 	
\end_layout

\begin_layout Plain Layout

                    PRIMARY KEY(IDGuerre), 	
\end_layout

\begin_layout Plain Layout

					FOREIGN KEY(IDPays) REFERENCES Pays(IDPays));
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\emph on
\begin_inset Caption Standard

\begin_layout Plain Layout
IMPLÉMENTATION DES TABLES mySQL
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Float algorithm
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

CREATE TABLE Dirigeant( 	
\end_layout

\begin_layout Plain Layout

                       IDDirigeant INT, 	
\end_layout

\begin_layout Plain Layout

                       Nom VARCHAR(50), 	
\end_layout

\begin_layout Plain Layout

                       Prénom VARCHAR(50), 	
\end_layout

\begin_layout Plain Layout

                       Statut VARCHAR(50), 	
\end_layout

\begin_layout Plain Layout

                       PRIMARY KEY(IDDirigeant));
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

CREATE TABLE diriger( 	
\end_layout

\begin_layout Plain Layout

					 IDDiriger INT, 	
\end_layout

\begin_layout Plain Layout

                     IDDirigeant INT, 	
\end_layout

\begin_layout Plain Layout

                     IDPays INT, 	
\end_layout

\begin_layout Plain Layout

                     DateDébut DATE, 	
\end_layout

\begin_layout Plain Layout

                     DateFin DATE, 	
\end_layout

\begin_layout Plain Layout

                     PRIMARY KEY(IDDiriger), 	
\end_layout

\begin_layout Plain Layout

                     FOREIGN KEY(IDDirigeant) REFERENCES 		
\end_layout

\begin_layout Plain Layout

					 Dirigeant(IDDirigeant), 	
\end_layout

\begin_layout Plain Layout

					 FOREIGN KEY(IDPays) REFERENCES Pays(IDPays));
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\emph on
\begin_inset Caption Standard

\begin_layout Plain Layout
IMPLÉMENTATION DES TABLES mySQL
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Newpage newpage
\end_inset


\begin_inset Newline newline
\end_inset

Remarque
\emph default
 : Comme vous pouvez le constater dans le code ci-dessus,nous avons utilisé
 plusieurs fois le type bool qui n'existe pas à proprement parler dans mySQL,
 la valeur sera en fait stockée comme une variable de type TINYINT propre
 à mySQL.
 Et, par quelques lignes de commande que nous verrons plus bas, nous assignerons
 le 
\begin_inset Quotes eld
\end_inset


\emph on
0
\emph default

\begin_inset Quotes erd
\end_inset

 à 
\emph on
false
\emph default
 et le 
\begin_inset Quotes eld
\end_inset


\emph on
1
\emph default

\begin_inset Quotes erd
\end_inset

 (plus généralement tout nombre non nul) à 
\emph on
true
\emph default
.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Float algorithm
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

INSERT INTO Pays(IDPays,Nom ,PIB, IDH, Arme_Atomique) 
\end_layout

\begin_layout Plain Layout

VALUES(1,"Afrique du Sud",819.093,0.705,0), 
\end_layout

\begin_layout Plain Layout

(2,"Australie",1095,0.939,0), 
\end_layout

\begin_layout Plain Layout

(3,"Bangladesh",687.1,0.614,0), 
\end_layout

\begin_layout Plain Layout

(4,"Cameroun",40.13,0.590,0), 
\end_layout

\begin_layout Plain Layout

(5,"Canada",1631.943,0.926,0), 
\end_layout

\begin_layout Plain Layout

(6,"Inde",7965.162,0.926,1), 
\end_layout

\begin_layout Plain Layout

(7,"Royaume-Uni",3009.325,0.924,1),
\end_layout

\begin_layout Plain Layout

(8, "Brésil", 3263.832, 0.759, 0), 
\end_layout

\begin_layout Plain Layout

(9, "Russie", 4349.420, 0.824, 1), 
\end_layout

\begin_layout Plain Layout

(10, "Chine", 23393, 0.761, 1);
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
EXEMPLE D'IMPLÉMENTATION DE LA BASE DE DONNÉES
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\emph on
Remarques : 
\end_layout

\begin_layout Itemize

\emph on
Les commandes NOW() permet d'extraire l'heure, le jour, le mois et l'année
 du moment où on exécute la requête.
\end_layout

\begin_layout Itemize

\emph on
Pour le PIB, on utilise le PIB PPA (PPA = parité de pouvoir d'achat).
 C'est une méthode utilisée en économie pour établir une comparaison, entre
 pays, du pouvoir d'achat des devises nationales, ce qu’une simple utilisation
 des taux de change ne permet pas de faire.
 
\begin_inset Newline newline
\end_inset


\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Requêtes SQL
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Pour des raisons évidentes, il nous sera impossible d'obtenir des listes
 et des réponses exhaustives à nos requêtes.
 
\begin_inset Newline newline
\end_inset

Nous avons choisi certains pays de manière à ce que nos requêtes aient un
 sens et ceux-ci serviront à illustrer l'utilisation que l'on peut faire
 de cette base de données.
\end_layout

\begin_layout Subsection
Requête 1
\end_layout

\begin_layout Standard

\series bold
\emph on
1) Quels pays composent l’union commerciale du Commonwealth (dont le dénominateu
r commun est l’ancien empire britannique et donc sa langue) ?
\series default
 (liste non exhaustive)
\emph default
 
\color red

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\color inherit
La formule d'algèbre relationnelle est :
\end_layout

\begin_layout Standard
\begin_inset Formula $\pi_{Pays.Nom}(\sigma_{a.Nom="Commonwealth"}(Pays\infty former\infty Alliance))$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

La requête SQL à entrer en machine est :
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

SELECT p.Nom AS Nom_Pays
\begin_inset Newline newline
\end_inset

FROM Pays AS p
\begin_inset Newline newline
\end_inset

INNER JOIN former AS f ON f.IDPays = p.IDPays
\begin_inset Newline newline
\end_inset

INNER JOIN Alliance AS a ON a.IDAlliance = f.IDAlliance
\begin_inset Newline newline
\end_inset

WHERE a.Nom = 'Commonwealth';
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename requete1.png
	lyxscale 50
	scale 50
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Résultat de la requête n°1
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Subsection
Requête 2
\end_layout

\begin_layout Standard

\series bold
\emph on
2) Trier par ordre croissant les IDH des membres de l'alliance économique
 BRICS (ORDER BY + jointure Pays Alliance)
\series default
\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

La formule d'algèbre relationnelle est :
\color red

\begin_inset Newline newline
\end_inset


\color inherit

\begin_inset Formula $\pi_{Pays.Nom}(\sigma_{a.Nom="BRICS"}(Pays\infty former\infty Alliance))$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

La requête SQL à entrer en machine est :
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

SELECT p.Nom AS Nom_Pays, IDH
\begin_inset Newline newline
\end_inset

FROM Pays AS p
\begin_inset Newline newline
\end_inset

INNER JOIN former AS f ON f.IDPays = p.IDPays
\begin_inset Newline newline
\end_inset

INNER JOIN Alliance AS a ON a.IDAlliance = f.IDAlliance
\begin_inset Newline newline
\end_inset

WHERE a.Nom='BRICS'
\begin_inset Newline newline
\end_inset

ORDER BY IDH;
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename requete2.png
	lyxscale 50
	scale 50
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Résultat de la requête n°2
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Subsection
Requête 3
\end_layout

\begin_layout Standard

\series bold
\emph on
3) Quelles sont les confessions présentes dans le conflit indo-pakistanais
 de 2019? 
\series default
\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

La formule d'algèbre relationnelle est :
\begin_inset Newline newline
\end_inset


\begin_inset Formula $\pi_{Confession.Nom}(\sigma_{g.Nom='Confrontation\,indo-pakistanaise\,de\,2019'}(guerre\infty Pays\infty posséder\infty Confession))$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

La requête SQL à entrer en machine est :
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

SELECT DISTINCT c.Nom AS Nom_Confession
\end_layout

\begin_layout Standard
FROM Confession AS c
\end_layout

\begin_layout Standard
INNER JOIN posséder AS p ON c.IDConfession = p.IDConfession
\end_layout

\begin_layout Standard
INNER JOIN Pays ON Pays.IDPays =p.IDPays
\end_layout

\begin_layout Standard
INNER JOIN guerre AS g ON g.IDPays = p.IDPays
\end_layout

\begin_layout Standard
WHERE g.Nom = 'Confrontation indo-pakistanaise de 2019';
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename requete3.png
	lyxscale 50
	scale 50
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Requête 4
\end_layout

\begin_layout Standard

\series bold
\emph on
4) Lister les pays qui contiennent plus de 4 habitants.
 
\series default
\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\emph on
Remarque : Requête peu utile mais on a choisi un sujet qui requiert une
 base de données gigantesque pour s'approcher de la réalité donc on doit
 de contenter de petites valeurs.
 Mais le principe est le même
\emph default
.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

La formule d'algèbre relationnelle est :
\begin_inset Newline newline
\end_inset


\begin_inset Formula $\pi_{Pays.Nom}(\sigma_{COUNT(IDCitoyen)>4}(Pays\infty Citoyen))$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

La requête SQL à entrer en machine est :
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

SELECT p.Nom AS Nom_Pays
\begin_inset Newline newline
\end_inset

FROM Pays AS p
\begin_inset Newline newline
\end_inset

INNER JOIN Citoyens AS c ON c.IDPays = p.IDPays
\begin_inset Newline newline
\end_inset

GROUP BY p.IDPays 
\begin_inset Newline newline
\end_inset

HAVING COUNT(IDCitoyens) > 4;
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename requete4.png
	lyxscale 50
	scale 50
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Résultat de la requête n°4
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Subsection
Requête 5
\end_layout

\begin_layout Standard

\series bold
\emph on
5) Sélectionner la nationalité majoritaire des citoyens d'un pays qui n'ont
 pas la nationalité de ce pays.
\begin_inset Newline newline
\end_inset

Quelle est la nationalité majoritaire parmi les étrangers résidant en France
 ?
\series default
\emph default
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

La formule d'algèbre relationnelle est :
\begin_inset Newline newline
\end_inset


\begin_inset Formula $\pi_{Nationalité,COUNT(IDCitoyen)}(\sigma_{Nationalité<>"France"}(Citoyen))$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

La requête SQL à entrer en machine est :
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

SELECT DISTINCT Nationalité, COUNT(IDCitoyens) 
\begin_inset Newline newline
\end_inset

FROM Citoyens AS c 
\begin_inset Newline newline
\end_inset

WHERE Nationalité <> 'France'
\begin_inset Newline newline
\end_inset

GROUP BY Nationalité
\begin_inset Newline newline
\end_inset

ORDER BY COUNT(IDCitoyens) DESC
\begin_inset Newline newline
\end_inset

LIMIT 1;
\begin_inset Newline newline
\end_inset


\emph on

\begin_inset Newline newline
\end_inset

Remarques : -LIMIT i permet de restreindre au nombre indiqué i les résultats
 de la requête qui vient d'être tapée.
\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

- ORDER BY ....
 DESC permet un tri dan l'ordre décroissant
\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename requete5.png
	lyxscale 50
	scale 50
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Résultat de la requête 5
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename requete5_bis.png
	lyxscale 50
	scale 50
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Résultat de la requête 5 bis
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Requête 6
\end_layout

\begin_layout Standard

\series bold
\emph on
6) Sélectionner les pays qui ne font pas partie de l'OTAN.

\series default
 
\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

La formule d'algèbre relationnelle est :
\begin_inset Newline newline
\end_inset


\begin_inset Formula $\pi_{Pays.Nom}(Pays)-\pi_{Pays.Nom}(\sigma_{a.Nom="OTAN"}(Pays\infty former\infty Alliance))$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

La requête SQL à entrer en machine est :
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

SELECT p.Nom AS Nom_Pays 
\begin_inset Newline newline
\end_inset

FROM Pays as p 
\begin_inset Newline newline
\end_inset

WHERE p.Nom 
\begin_inset Newline newline
\end_inset

NOT IN 
\begin_inset Newline newline
\end_inset

(SELECT p.Nom 
\begin_inset Newline newline
\end_inset

FROM Pays as p 
\begin_inset Newline newline
\end_inset

INNER JOIN former AS f ON f.IDPays = p.IDPays 
\begin_inset Newline newline
\end_inset

INNER JOIN Alliance AS a ON a.IDAlliance = f.IDAlliance 
\begin_inset Newline newline
\end_inset

WHERE a.Nom = 'OTAN'); 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename REQUETE6.png
	lyxscale 50
	scale 50
	rotateOrigin center

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Résultat de la requête 6
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Requête 7
\end_layout

\begin_layout Standard

\series bold
\emph on
7) Sélectionner les pays qui contiennent un 
\begin_inset Quotes eld
\end_inset

e
\begin_inset Quotes erd
\end_inset

 dans leur nom.
 
\series default
\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\emph on
Remarque
\emph default
 : Nous voulions construire une requête utilisant CONTAINS mais nous n'avons
 pas trouvé de réelle documentation sur celle-ci donc nous sommes passés
 par un autre outil qui affiche la même chose : LIKE ‘%a%’.
 
\begin_inset Newline newline
\end_inset

Ce modèle est utilisé pour rechercher tous les enregistrement qui utilisent
 le caractère « a ».
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

La requête SQL à entrer en machine est :
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

SELECT p.Nom AS Nom_Pays 
\begin_inset Newline newline
\end_inset

FROM Pays AS p
\begin_inset Newline newline
\end_inset

WHERE p.Nom LIKE '%e%';
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename requete7.png
	lyxscale 50
	scale 50
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Résultat de la requête 7
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Requête 8
\end_layout

\begin_layout Standard

\series bold
\emph on
8) Liste des pays qui font partie de toutes les alliances.
\series default
\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

La formule d'algèbre relationnelle est :
\begin_inset Newline newline
\end_inset


\begin_inset Formula $\pi_{Pays.Nom}(Pays)-\pi_{Pays.Nom}((\pi_{Pays.IDPays}(former)X\pi_{Alliance.IDAlliance}(former))-Pays)$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Pour la requête SQL, il nous faut reformuler la question en utilisant une
 phrase avec une double négation : 
\emph on
Quels sont les pays pour lesquelles il n’existe pas d'alliance dont ils
 ne font pas partie ?
\begin_inset Newline newline
\end_inset


\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

La requête SQL à entrer en machine est :
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

SELECT DISTINCT Pays.Nom AS NomPays 
\begin_inset Newline newline
\end_inset

FROM Pays WHERE NOT EXISTS 
\begin_inset Newline newline
\end_inset

(SELECT * FROM former WHERE NOT EXISTS 
\begin_inset Newline newline
\end_inset

(SELECT * FROM former f, Pays p, Alliance a 
\begin_inset Newline newline
\end_inset

WHERE p.IDPays = f.IDPays and a.IDAlliance = f.IDAlliance 
\begin_inset Newline newline
\end_inset

AND Pays.IDPays = p.IDPays AND former.IDPays = f.IDPays));
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Subsection
Requête 9
\end_layout

\begin_layout Standard

\series bold
\emph on
9) Lister tous les présidents de la 
\begin_inset Formula $V^{e}$
\end_inset

République en France à partir de 1995.
\series default
\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

La formule d'algèbre relationnelle est :
\begin_inset Newline newline
\end_inset


\begin_inset Formula $\pi_{d.Nom,d.Prénom,DD,DF}(\sigma_{Statut="président",Pays.Nom="France",DD>=1995}(Pays\infty diriger\infty Dirigeant))$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

La requête SQL à entrer en machine est :
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

SELECT DISTINCT d.Nom AS Nom, d.Prénom AS Prénom, DateDébut AS DD, DateFin
 AS DF 
\begin_inset Newline newline
\end_inset

FROM Dirigeant AS d 
\begin_inset Newline newline
\end_inset

inner JOIN diriger AS dir on d.IDDirigeant=dir.IDDirigeant 
\begin_inset Newline newline
\end_inset

inner JOIN Pays AS p on p.IDPays=dir.IDPays 
\begin_inset Newline newline
\end_inset

WHERE Statut='président' AND p.Nom = 'France' 
\begin_inset Newline newline
\end_inset

AND dir.DateDébut >='1995 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename requete9.png
	lyxscale 50
	scale 50
	rotateOrigin center

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Résultat de la requête 9
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Requête 10
\end_layout

\begin_layout Standard

\series bold
\emph on
10) Parmi les pays de l'UE, quels sont les pays qui parlent anglais ?
\series default
\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

La formule d'algèbre relationnelle est :
\begin_inset Newline newline
\end_inset


\begin_inset Formula $\pi_{Pays.Nom}(\sigma_{Langue.Nom="anglais"}((\sigma_{a.Nom="UE"}(Pays\infty former\infty Alliance))\infty Langue))$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

La requête SQL à entrer en machine est :
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

SELECT p.Nom AS NomPays FROM Pays AS p 
\begin_inset Newline newline
\end_inset

WHERE p.Nom 
\begin_inset Newline newline
\end_inset

IN
\begin_inset Newline newline
\end_inset

(SELECT p.Nom FROM Pays AS p 
\begin_inset Newline newline
\end_inset

INNER JOIN parler AS p ar ON par.IDPays = p.IDPays 
\begin_inset Newline newline
\end_inset

INNER JOIN Langue_Officielle AS l ON l.IDLangue = par.IDLangue 
\begin_inset Newline newline
\end_inset

WHERE l.Nom = 'anglais'); 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

D'abord, nous affichons la table contenant tous les pays et leur langue
 officielle pour mieux visualiser :
\begin_inset Newline newline
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename prérequete10.png
	lyxscale 50
	scale 50
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Table contenant tous les pays et leur langue officielle
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

Ainsi, dans l'Union Européenne, seuls les pays-ci parlent anglais :
\begin_inset Newline newline
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename requete10.png
	lyxscale 50
	scale 50
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Résultat de la requête 10
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Requête 11
\end_layout

\begin_layout Standard

\series bold
11) Nombre d'habitants dans les pays possédant l'arme atomique
\series default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

La formule d'algèbre relationnelle est :
\begin_inset Newline newline
\end_inset


\begin_inset Formula $\pi_{COUNT(IDCitoyen)}((\sigma_{ArmeAtomique=1}(Pays))\infty Citoyen)$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

La requête SQL à entrer en machine est :
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

SELECT p.Nom AS NomPays, COUNT(IDCitoyens) FROM Pays AS p 
\begin_inset Newline newline
\end_inset

INNER JOIN Citoyens AS c ON c.IDPays = p.IDPays 
\begin_inset Newline newline
\end_inset

WHERE p.Arme_Atomique = 1 
\begin_inset Newline newline
\end_inset

GROUP BY p.IDPays;
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename prerequete11.png
	lyxscale 50
	scale 50
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Liste des pays possédant l'arme atomique
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename requete11.png
	lyxscale 50
	scale 50
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Résultat de la requête 11
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\emph on
Remarque : Ici, dans le résultat de la requête, on ne retrouve que la Russie
 et la France simplement parce que l'on a choisi de ne pas faire figurer
 de citoyens de Chine, Inde, Royaume-Uni, et des USA par soucis de simplicité.
\end_layout

\begin_layout Subsection
Requête 12
\end_layout

\begin_layout Standard

\series bold
\emph on
12) Quelles sont les armées présentes dans les guerres des pays chiites
 en 1947 (=les armées des pays en partie au moins chiites en guerre en 1947)
\series default
\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

La formule d'algèbre relationnelle est :
\begin_inset Newline newline
\end_inset


\begin_inset Formula $\pi_{Armée.Nom(}((\sigma_{DD<=1947,DF>=1947}(Guerre\infty Pays))X(\sigma_{c.Nom="chiisme"}(Confession\infty posséder\infty Pays)))\infty Armée)$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

La requête SQL à entrer en machine est :
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

SELECT a.Nom AS Nom_Armée, Effectif
\begin_inset Newline newline
\end_inset

FROM (SELECT p1.IDPays FROM 
\begin_inset Newline newline
\end_inset

(SELECT Pays.IDPays FROM Pays 
\begin_inset Newline newline
\end_inset

INNER JOIN posséder ON posséder.IDPays = Pays.IDPays
\begin_inset Newline newline
\end_inset

INNER JOIN Confession AS c ON c.IDConfession = posséder.IDConfession
\begin_inset Newline newline
\end_inset

WHERE c.Nom = 'Chiisme') AS p1
\begin_inset Newline newline
\end_inset

INNER JOIN guerre ON guerre.IDPays = p1.IDPays
\begin_inset Newline newline
\end_inset

WHERE YEAR(guerre.DateDébut) <=1947
\begin_inset Newline newline
\end_inset

AND YEAR(guerre.DateFin)>=1947) AS p2 
\begin_inset Newline newline
\end_inset

INNER JOIN Armée AS a ON p2.IDPays= a.IDPays;
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename requete12.png
	lyxscale 50
	scale 50
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Résultat de la requête 12
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Requête 13 
\end_layout

\begin_layout Standard

\series bold
\emph on
13) Liste des langues parlées par au moins deux pays?
\series default
\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

La formule d'algèbre relationnelle est :
\begin_inset Newline newline
\end_inset


\begin_inset Formula $\pi_{LangueOfficielle.Nom}((LangueOfficielle\infty parler)\infty_{IDLangue=IDLangue\land x.IDPays\neq y.IDPays}parler)$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

La requête SQL à entrer en machine est :
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

SELECT DISTINCT Langue_Officielle.Nom 
\begin_inset Newline newline
\end_inset

FROM Langue_Officielle, parler x, parler y
\begin_inset Newline newline
\end_inset

WHERE x.IDPays != y.IDPays 
\begin_inset Newline newline
\end_inset

AND Langue_Officielle.IDLangue = x.IDLangue 
\begin_inset Newline newline
\end_inset

AND x.IDLangue = y.IDLangue;
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename requete13.png
	lyxscale 50
	scale 50
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Résultat de la requête 13
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_body
\end_document
